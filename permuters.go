// Generated by gen_permuters.go
package main

// [0 0 0 0 0 0 0 0 0 0 11]
//go:nosplit
func (a *permuter) adaptCustom0(val int) {
	val = (val & 0x400)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 0 0 0 0 0 3]
//go:nosplit
func (a *permuter) adaptCustom1(val int) {
	val = ((val << 8) & 0x400)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 0 0 0 0 0 4]
//go:nosplit
func (a *permuter) adaptCustom2(val int) {
	val = ((val << 7) & 0x400)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 0 0 0 1 2 0]
//go:nosplit
func (a *permuter) adaptCustom3(val int) {
	val = ((val << 8) & 0x300)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 0 0 0 3 4 0]
//go:nosplit
func (a *permuter) adaptCustom4(val int) {
	val = ((val << 6) & 0x300)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 0 0 0 5 6 0]
//go:nosplit
func (a *permuter) adaptCustom5(val int) {
	val = ((val << 4) & 0x300)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 0 0 0 7 8 0]
//go:nosplit
func (a *permuter) adaptCustom6(val int) {
	val = ((val << 2) & 0x300)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 0 0 0 9 10 0]
//go:nosplit
func (a *permuter) adaptCustom7(val int) {
	val = (val & 0x300)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 0 1 2 3 4 11]
//go:nosplit
func (a *permuter) adaptCustom8(val int) {
	val = ((val << 6) & 0x3c0) |
		(val & 0x400)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 1 2 3 4 5 0]
//go:nosplit
func (a *permuter) adaptCustom9(val int) {
	val = ((val << 5) & 0x3e0)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 0 6 7 8 9 10 11]
//go:nosplit
func (a *permuter) adaptCustom10(val int) {
	val = (val & 0x7e0)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 1 2 3 4 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom11(val int) {
	val = ((val << 4) & 0xf0)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 5 6 3 4 1 2 0]
//go:nosplit
func (a *permuter) adaptCustom12(val int) {
	val = ((val << 8) & 0x300) |
		((val << 4) & 0xc0) |
		(val & 0x30)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 0 0 5 6 7 8 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom13(val int) {
	val = (val & 0xf0)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 11 0 0 0 0 0 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom14(val int) {
	val = ((val >> 8) & 0x4)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 3 4 5 6 7 8 9 10 11]
//go:nosplit
func (a *permuter) adaptCustom15(val int) {
	val = (val & 0x7fc)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 0 5 6 0 0 0 0 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom16(val int) {
	val = ((val >> 2) & 0xc)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [0 2 3 4 5 6 7 8 9 10 0]
//go:nosplit
func (a *permuter) adaptCustom17(val int) {
	val = (val & 0x3fe)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 3 4 0 0 0 0 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom18(val int) {
	val = (val & 0xf)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 3 4 5 6 7 8 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom19(val int) {
	val = (val & 0xff)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 3 4 5 6 7 8 0 0 11]
//go:nosplit
func (a *permuter) adaptCustom20(val int) {
	val = (val & 0x4ff)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 3 4 5 6 7 8 10 9 11]
//go:nosplit
func (a *permuter) adaptCustom21(val int) {
	val = ((val << 1) & 0x200) |
		(val & 0x4ff) |
		((val >> 1) & 0x100)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 3 4 5 6 7 8 11 11 0]
//go:nosplit
func (a *permuter) adaptCustom22(val int) {
	val = (val & 0xff) |
		((val >> 1) & 0x200) |
		((val >> 2) & 0x100)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 3 4 5 6 7 8 9 10 0]
//go:nosplit
func (a *permuter) adaptCustom23(val int) {
	val = (val & 0x3ff)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 3 4 5 6 9 10 7 8 11]
//go:nosplit
func (a *permuter) adaptCustom24(val int) {
	val = ((val << 2) & 0x300) |
		(val & 0x43f) |
		((val >> 2) & 0xc0)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 3 4 9 10 7 8 5 6 11]
//go:nosplit
func (a *permuter) adaptCustom25(val int) {
	val = ((val << 4) & 0x300) |
		(val & 0x4cf) |
		((val >> 4) & 0x30)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [1 2 9 10 5 6 7 8 3 4 11]
//go:nosplit
func (a *permuter) adaptCustom26(val int) {
	val = ((val << 6) & 0x300) |
		(val & 0x4f3) |
		((val >> 6) & 0xc)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [10 0 0 0 0 0 0 0 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom27(val int) {
	val = ((val >> 9) & 0x1)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [3 4 1 2 0 0 0 0 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom28(val int) {
	val = ((val << 2) & 0xc) |
		((val >> 2) & 0x3)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [3 4 5 6 7 8 9 10 1 2 11]
//go:nosplit
func (a *permuter) adaptCustom29(val int) {
	val = ((val << 8) & 0x300) |
		(val & 0x400) |
		((val >> 2) & 0xff)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [5 6 7 8 0 0 0 0 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom30(val int) {
	val = ((val >> 4) & 0xf)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [7 0 0 0 0 0 0 0 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom31(val int) {
	val = ((val >> 6) & 0x1)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [9 0 0 0 0 0 0 0 0 11 10]
//go:nosplit
func (a *permuter) adaptCustom32(val int) {
	val = ((val << 1) & 0x400) |
		((val >> 1) & 0x200) |
		((val >> 8) & 0x1)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [9 10 0 0 0 0 0 0 0 0 0]
//go:nosplit
func (a *permuter) adaptCustom33(val int) {
	val = ((val >> 8) & 0x3)
	if val != 0 {
		a.out.Transmit(val)
	}
}

// [9 10 3 4 5 6 7 8 1 2 11]
//go:nosplit
func (a *permuter) adaptCustom34(val int) {
	val = ((val << 8) & 0x300) |
		(val & 0x4fc) |
		((val >> 8) & 0x3)
	if val != 0 {
		a.out.Transmit(val)
	}
}

func getCustomPermuter(order [11]int) (func(*permuter, int), bool) {
	if order == [11]int{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11} {
		return (*permuter).adaptCustom0, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3} {
		return (*permuter).adaptCustom1, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4} {
		return (*permuter).adaptCustom2, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0} {
		return (*permuter).adaptCustom3, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 0} {
		return (*permuter).adaptCustom4, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 0} {
		return (*permuter).adaptCustom5, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 0} {
		return (*permuter).adaptCustom6, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 0} {
		return (*permuter).adaptCustom7, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 11} {
		return (*permuter).adaptCustom8, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 0} {
		return (*permuter).adaptCustom9, true
	}
	if order == [11]int{0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 11} {
		return (*permuter).adaptCustom10, true
	}
	if order == [11]int{0, 0, 0, 0, 1, 2, 3, 4, 0, 0, 0} {
		return (*permuter).adaptCustom11, true
	}
	if order == [11]int{0, 0, 0, 0, 5, 6, 3, 4, 1, 2, 0} {
		return (*permuter).adaptCustom12, true
	}
	if order == [11]int{0, 0, 0, 0, 5, 6, 7, 8, 0, 0, 0} {
		return (*permuter).adaptCustom13, true
	}
	if order == [11]int{0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0} {
		return (*permuter).adaptCustom14, true
	}
	if order == [11]int{0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11} {
		return (*permuter).adaptCustom15, true
	}
	if order == [11]int{0, 0, 5, 6, 0, 0, 0, 0, 0, 0, 0} {
		return (*permuter).adaptCustom16, true
	}
	if order == [11]int{0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0} {
		return (*permuter).adaptCustom17, true
	}
	if order == [11]int{1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0} {
		return (*permuter).adaptCustom18, true
	}
	if order == [11]int{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 0} {
		return (*permuter).adaptCustom19, true
	}
	if order == [11]int{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 11} {
		return (*permuter).adaptCustom20, true
	}
	if order == [11]int{1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11} {
		return (*permuter).adaptCustom21, true
	}
	if order == [11]int{1, 2, 3, 4, 5, 6, 7, 8, 11, 11, 0} {
		return (*permuter).adaptCustom22, true
	}
	if order == [11]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0} {
		return (*permuter).adaptCustom23, true
	}
	if order == [11]int{1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11} {
		return (*permuter).adaptCustom24, true
	}
	if order == [11]int{1, 2, 3, 4, 9, 10, 7, 8, 5, 6, 11} {
		return (*permuter).adaptCustom25, true
	}
	if order == [11]int{1, 2, 9, 10, 5, 6, 7, 8, 3, 4, 11} {
		return (*permuter).adaptCustom26, true
	}
	if order == [11]int{10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0} {
		return (*permuter).adaptCustom27, true
	}
	if order == [11]int{3, 4, 1, 2, 0, 0, 0, 0, 0, 0, 0} {
		return (*permuter).adaptCustom28, true
	}
	if order == [11]int{3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 11} {
		return (*permuter).adaptCustom29, true
	}
	if order == [11]int{5, 6, 7, 8, 0, 0, 0, 0, 0, 0, 0} {
		return (*permuter).adaptCustom30, true
	}
	if order == [11]int{7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0} {
		return (*permuter).adaptCustom31, true
	}
	if order == [11]int{9, 0, 0, 0, 0, 0, 0, 0, 0, 11, 10} {
		return (*permuter).adaptCustom32, true
	}
	if order == [11]int{9, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0} {
		return (*permuter).adaptCustom33, true
	}
	if order == [11]int{9, 10, 3, 4, 5, 6, 7, 8, 1, 2, 11} {
		return (*permuter).adaptCustom34, true
	}
	return nil, false
}
